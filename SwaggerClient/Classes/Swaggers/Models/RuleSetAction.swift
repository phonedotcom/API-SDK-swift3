//
// RuleSetAction.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Filter Object. Optional. See below for details. */
open class RuleSetAction: JSONEncodable {
    /** Required. */
    public var action: String?
    /** Extension that this action refers to. Output is an Extension Summary Object. Input must be an Extension Lookup Object. Required. */
    public var _extension: ExtensionSummary?
    /** This action is for forwarding calls to any number of extensions or phone numbers. The forwarding is handled in parallel, meaning that all phone numbers and/or extensions will ring simultaneously. When the call is answered by any single phone number or extension, ringing will stop for all of them. Subsequent actions in this rule set will be performed if the call is not answered before the timeout period is reached, or if it is forwarded to an extension that has its own route and that route does not result in any actions that disconnect the call or take over call handling. */
    public var items: [RuleSetForwardItem]?
    /** Seconds that our routing engine should wait until moving on. Optional. Must be an integer between 5 and 90. Default is 5 seconds. */
    public var timeout: Int32?
    /** Hold Music to be played while callers are waiting. Output is a Media Summary Object. Input must be a Media Lookup Object. Optional. Must refer to a media recording that has is_hold_music set to TRUE. Default is to play a standard ring tone. */
    public var holdMusic: MediaSummary?
    /** Greeting that this action refers to. Output is a Media Summary Object. Input must be a Media Lookup Object. Required. Must refer to a media recording that has is_hold_music set to FALSE. */
    public var greeting: MediaSummary?
    /** Required. Seconds that the caller should be placed on hold before being moved onto the next action. Must be an integer between 1 and 60 seconds. */
    public var duration: Int32?
    /** Menu that this action refers to. Required. Output is a Menu Summary Object. Input must be a Menu Lookup Object. */
    public var menu: MenuSummary?
    /** Queue that this action refers to. Required. Output is a Queue Summary Object. Input must be a Queue Lookup Object. */
    public var queue: QueueSummary?
    /** Trunk that this action refers to. Required. Output is a Trunk Summary Object. Input must be a Trunk Lookup Object. */
    public var trunk: TrunkSummary?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["action"] = self.action
        nillableDictionary["extension"] = self._extension?.encodeToJSON()
        nillableDictionary["items"] = self.items?.encodeToJSON()
        nillableDictionary["timeout"] = self.timeout?.encodeToJSON()
        nillableDictionary["hold_music"] = self.holdMusic?.encodeToJSON()
        nillableDictionary["greeting"] = self.greeting?.encodeToJSON()
        nillableDictionary["duration"] = self.duration?.encodeToJSON()
        nillableDictionary["menu"] = self.menu?.encodeToJSON()
        nillableDictionary["queue"] = self.queue?.encodeToJSON()
        nillableDictionary["trunk"] = self.trunk?.encodeToJSON()
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
