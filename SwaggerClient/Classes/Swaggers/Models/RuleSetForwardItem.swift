//
// RuleSetForwardItem.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Array of Forward Item Objects. See below for details. Required. */
open class RuleSetForwardItem: JSONEncodable {
    /** Required. Must equal phone_number or extension. */
    public var type: String?
    /** Required if type &#x3D; \&quot;extension\&quot;. Extension that callers should be directed to. Output is an Extension Summary Object. Input must be an Extension Lookup Object. */
    public var _extension: ExtensionSummary?
    /** Required if type &#x3D; \&quot;phone_number\&quot;. Phone number that callers should be directed to. Must be a string in E.164 format. */
    public var number: String?
    /** Boolean. Optional. Default is FALSE. Use this to activate call screening. If TRUE, the timeout on the parent action should be at least 30 seconds. */
    public var screening: Bool?
    /** Optional. Must equal calling_number or called_number. Defines which phone number should be used for Caller ID. Default is calling_number. */
    public var callerId: String?
    /** Optional string. If screening &#x3D; TRUE, this value will be passed into our Text-To-Speech engine and used to inform the caller of who they have reached. */
    public var voiceTag: String?
    /** Optional. Must equal one of: DEFAULT, STYLE_2, STYLE_3, STYLE_4, STYLE_5, STYLE_6, STYLE_7, STYLE_8, or STYLE_9. Identifies the style of ring tone you will hear when an incoming call is waiting. */
    public var distinctiveRing: String?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["type"] = self.type
        nillableDictionary["extension"] = self._extension?.encodeToJSON()
        nillableDictionary["number"] = self.number
        nillableDictionary["screening"] = self.screening
        nillableDictionary["caller_id"] = self.callerId
        nillableDictionary["voice_tag"] = self.voiceTag
        nillableDictionary["distinctive_ring"] = self.distinctiveRing
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
