//
// ExpressservicecodesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class ExpressservicecodesAPI: APIBase {
    /**
     Show details of an account Express Service Code
     
     - parameter accountId: (path) Account ID 
     - parameter codeId: (path) Device ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAccountExpressSrvCode(accountId: Int32, codeId: Int32, completion: @escaping ((_ data: ExpressServiceCodeFull?,_ error: Error?) -> Void)) {
        getAccountExpressSrvCodeWithRequestBuilder(accountId: accountId, codeId: codeId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Show details of an account Express Service Code
     - GET /accounts/{accountId}/express-service-codes/{codeId}
     - This service shows the details of an Account Express Service Code.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "expire_date" : 123,
  "id" : 123,
  "express_service_code" : "aeiou"
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter codeId: (path) Device ID 

     - returns: RequestBuilder<ExpressServiceCodeFull> 
     */
    open class func getAccountExpressSrvCodeWithRequestBuilder(accountId: Int32, codeId: Int32) -> RequestBuilder<ExpressServiceCodeFull> {
        var path = "/accounts/{accountId}/express-service-codes/{codeId}"
        path = path.replacingOccurrences(of: "{accountId}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{codeId}", with: "\(codeId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ExpressServiceCodeFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the Express Service Code associated with your account in list format
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listAccountExpressSrvCodes(accountId: Int32, filtersId: [String]? = nil, completion: @escaping ((_ data: ListExpressServiceCodes?,_ error: Error?) -> Void)) {
        listAccountExpressSrvCodesWithRequestBuilder(accountId: accountId, filtersId: filtersId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get the Express Service Code associated with your account in list format
     - GET /accounts/{accountId}/express-service-codes
     - See Express Service Codes for more detail.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : 123,
  "offset" : 123,
  "limit" : 123,
  "filters" : {
    "id" : "aeiou"
  },
  "sort" : [ {
    "id" : "aeiou"
  } ],
  "items" : [ {
    "expire_date" : 123,
    "id" : 123,
    "express_service_code" : "aeiou"
  } ]
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)

     - returns: RequestBuilder<ListExpressServiceCodes> 
     */
    open class func listAccountExpressSrvCodesWithRequestBuilder(accountId: Int32, filtersId: [String]? = nil) -> RequestBuilder<ListExpressServiceCodes> {
        var path = "/accounts/{accountId}/express-service-codes"
        path = path.replacingOccurrences(of: "{accountId}", with: "\(accountId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "filters[id]": filtersId
        ])
        

        let requestBuilder: RequestBuilder<ListExpressServiceCodes>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
