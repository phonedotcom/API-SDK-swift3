//
// SmsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class SmsAPI: APIBase {
    /**
     Send a SMS to one or a group of recipients
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) SMS data 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createAccountSms(accountId: Int32, data: CreateSmsParams, completion: @escaping ((_ data: SmsFull?,_ error: Error?) -> Void)) {
        createAccountSmsWithRequestBuilder(accountId: accountId, data: data).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Send a SMS to one or a group of recipients
     - POST /accounts/{accountId}/sms
     - For more on the input fields, see Intro to SMS.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "from" : "aeiou",
  "id" : "aeiou",
  "to" : [ {
    "number" : "aeiou",
    "status" : "aeiou"
  } ],
  "text" : "aeiou",
  "direction" : "aeiou",
  "created_epoch" : 123
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) SMS data 

     - returns: RequestBuilder<SmsFull> 
     */
    open class func createAccountSmsWithRequestBuilder(accountId: Int32, data: CreateSmsParams) -> RequestBuilder<SmsFull> {
        var path = "/accounts/{accountId}/sms"
        path = path.replacingOccurrences(of: "{accountId}", with: "\(accountId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SmsFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Show details of an individual SMS
     
     - parameter accountId: (path) Account ID 
     - parameter smsId: (path) SMS ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAccountSms(accountId: Int32, smsId: String, completion: @escaping ((_ data: SmsFull?,_ error: Error?) -> Void)) {
        getAccountSmsWithRequestBuilder(accountId: accountId, smsId: smsId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Show details of an individual SMS
     - GET /accounts/{accountId}/sms/{smsId}
     - This service shows the details of an individual sms. See Intro to SMS for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "created_at" : "2000-01-23T04:56:07.000+00:00",
  "from" : "aeiou",
  "id" : "aeiou",
  "to" : [ {
    "number" : "aeiou",
    "status" : "aeiou"
  } ],
  "text" : "aeiou",
  "direction" : "aeiou",
  "created_epoch" : 123
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter smsId: (path) SMS ID 

     - returns: RequestBuilder<SmsFull> 
     */
    open class func getAccountSmsWithRequestBuilder(accountId: Int32, smsId: String) -> RequestBuilder<SmsFull> {
        var path = "/accounts/{accountId}/sms/{smsId}"
        path = path.replacingOccurrences(of: "{accountId}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{smsId}", with: "\(smsId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SmsFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a list of SMS messages for an account
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersDirection: (query) Direction filter (optional)
     - parameter filtersFrom: (query) Caller ID filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortCreatedAt: (query) Sort by created time of message (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listAccountSms(accountId: Int32, filtersId: [String]? = nil, filtersDirection: String? = nil, filtersFrom: String? = nil, sortId: String? = nil, sortCreatedAt: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: @escaping ((_ data: ListSms?,_ error: Error?) -> Void)) {
        listAccountSmsWithRequestBuilder(accountId: accountId, filtersId: filtersId, filtersDirection: filtersDirection, filtersFrom: filtersFrom, sortId: sortId, sortCreatedAt: sortCreatedAt, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a list of SMS messages for an account
     - GET /accounts/{accountId}/sms
     - See Intro to SMS for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : 123,
  "offset" : 123,
  "limit" : 123,
  "filters" : {
    "from" : "aeiou",
    "id" : "aeiou",
    "direction" : "aeiou"
  },
  "sort" : {
    "created_at" : "aeiou",
    "id" : "aeiou"
  },
  "items" : [ {
    "created_at" : "2000-01-23T04:56:07.000+00:00",
    "from" : "aeiou",
    "id" : "aeiou",
    "to" : [ {
      "number" : "aeiou",
      "status" : "aeiou"
    } ],
    "text" : "aeiou",
    "direction" : "aeiou",
    "created_epoch" : 123
  } ]
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersDirection: (query) Direction filter (optional)
     - parameter filtersFrom: (query) Caller ID filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortCreatedAt: (query) Sort by created time of message (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListSms> 
     */
    open class func listAccountSmsWithRequestBuilder(accountId: Int32, filtersId: [String]? = nil, filtersDirection: String? = nil, filtersFrom: String? = nil, sortId: String? = nil, sortCreatedAt: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListSms> {
        var path = "/accounts/{accountId}/sms"
        path = path.replacingOccurrences(of: "{accountId}", with: "\(accountId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "filters[id]": filtersId, 
            "filters[direction]": filtersDirection, 
            "filters[from]": filtersFrom, 
            "sort[id]": sortId, 
            "sort[created_at]": sortCreatedAt, 
            "limit": limit?.encodeToJSON(), 
            "offset": offset?.encodeToJSON(), 
            "fields": fields
        ])
        

        let requestBuilder: RequestBuilder<ListSms>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
