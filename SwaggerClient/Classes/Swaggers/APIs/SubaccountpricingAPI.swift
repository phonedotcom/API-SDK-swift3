//
// SubaccountpricingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SubaccountpricingAPI: APIBase {
    /**
     Add a pricing plan to a subaccount.
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter data: (body) Subaccount pricing data 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createAccountSubaccountPricing(accountId: Int32, subaccountId: Int32, data: CreatePricingParams, completion: @escaping ((_ data: PricingFull?,_ error: Error?) -> Void)) {
        createAccountSubaccountPricingWithRequestBuilder(accountId: accountId, subaccountId: subaccountId, data: data).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Add a pricing plan to a subaccount.
     - POST /accounts/{account_id}/subaccounts/{subaccount_id}/pricing
     - Add a pricing plan to a subaccount. See Account Subaccount Pricing for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "reason" : "aeiou",
  "expire_date" : "aeiou",
  "id" : 0,
  "pricing" : {
    "name" : "aeiou",
    "id" : 6
  },
  "voip_id" : 1,
  "who" : "aeiou"
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter data: (body) Subaccount pricing data 

     - returns: RequestBuilder<PricingFull> 
     */
    open class func createAccountSubaccountPricingWithRequestBuilder(accountId: Int32, subaccountId: Int32, data: CreatePricingParams) -> RequestBuilder<PricingFull> {
        var path = "/accounts/{account_id}/subaccounts/{subaccount_id}/pricing"
        path = path.replacingOccurrences(of: "{account_id}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{subaccount_id}", with: "\(subaccountId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PricingFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Delete a pricing plan from a subaccount.
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter pricingId: (path) Pricing Object ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteAccountSubaccountPricing(accountId: Int32, subaccountId: Int32, pricingId: Int32, completion: @escaping ((_ data: DeleteEntry?,_ error: Error?) -> Void)) {
        deleteAccountSubaccountPricingWithRequestBuilder(accountId: accountId, subaccountId: subaccountId, pricingId: pricingId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Delete a pricing plan from a subaccount.
     - DELETE /accounts/{account_id}/subaccounts/{subaccount_id}/pricing/{pricing_id}
     - Delete a pricing plan from a subaccount. See Account Subaccount Pricing for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "success" : true
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter pricingId: (path) Pricing Object ID 

     - returns: RequestBuilder<DeleteEntry> 
     */
    open class func deleteAccountSubaccountPricingWithRequestBuilder(accountId: Int32, subaccountId: Int32, pricingId: Int32) -> RequestBuilder<DeleteEntry> {
        var path = "/accounts/{account_id}/subaccounts/{subaccount_id}/pricing/{pricing_id}"
        path = path.replacingOccurrences(of: "{account_id}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{subaccount_id}", with: "\(subaccountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pricing_id}", with: "\(pricingId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DeleteEntry>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get the details of a pricing plan for a subaccount.
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter pricingId: (path) Pricing Object ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAccountSubaccountPricing(accountId: Int32, subaccountId: Int32, pricingId: Int32, completion: @escaping ((_ data: PricingFull?,_ error: Error?) -> Void)) {
        getAccountSubaccountPricingWithRequestBuilder(accountId: accountId, subaccountId: subaccountId, pricingId: pricingId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get the details of a pricing plan for a subaccount.
     - GET /accounts/{account_id}/subaccounts/{subaccount_id}/pricing/{pricing_id}
     - Get the details of a pricing plan for a subaccount. See Account Subaccount Pricing for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "reason" : "aeiou",
  "expire_date" : "aeiou",
  "id" : 0,
  "pricing" : {
    "name" : "aeiou",
    "id" : 6
  },
  "voip_id" : 1,
  "who" : "aeiou"
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter pricingId: (path) Pricing Object ID 

     - returns: RequestBuilder<PricingFull> 
     */
    open class func getAccountSubaccountPricingWithRequestBuilder(accountId: Int32, subaccountId: Int32, pricingId: Int32) -> RequestBuilder<PricingFull> {
        var path = "/accounts/{account_id}/subaccounts/{subaccount_id}/pricing/{pricing_id}"
        path = path.replacingOccurrences(of: "{account_id}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{subaccount_id}", with: "\(subaccountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{pricing_id}", with: "\(pricingId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PricingFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get a list of pricing plans for a subaccount.
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listAccountSubaccountPricing(accountId: Int32, subaccountId: Int32, filtersId: [String]? = nil, sortId: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: @escaping ((_ data: ListPricings?,_ error: Error?) -> Void)) {
        listAccountSubaccountPricingWithRequestBuilder(accountId: accountId, subaccountId: subaccountId, filtersId: filtersId, sortId: sortId, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a list of pricing plans for a subaccount.
     - GET /accounts/{account_id}/subaccounts/{subaccount_id}/pricing
     - Get a list of pricing plans for a subaccount. See Account Subaccount Pricing for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : 0,
  "offset" : 6,
  "limit" : 1,
  "filters" : {
    "id" : "aeiou"
  },
  "sort" : {
    "id" : "aeiou"
  },
  "items" : [ {
    "reason" : "aeiou",
    "expire_date" : "aeiou",
    "id" : 5,
    "pricing" : {
      "name" : "aeiou",
      "id" : 5
    },
    "voip_id" : 2,
    "who" : "aeiou"
  } ]
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter subaccountId: (path) Subaccount ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListPricings> 
     */
    open class func listAccountSubaccountPricingWithRequestBuilder(accountId: Int32, subaccountId: Int32, filtersId: [String]? = nil, sortId: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListPricings> {
        var path = "/accounts/{account_id}/subaccounts/{subaccount_id}/pricing"
        path = path.replacingOccurrences(of: "{account_id}", with: "\(accountId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{subaccount_id}", with: "\(subaccountId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "filters[id]": filtersId, 
            "sort[id]": sortId, 
            "limit": limit?.encodeToJSON(), 
            "offset": offset?.encodeToJSON(), 
            "fields": fields
        ])
        

        let requestBuilder: RequestBuilder<ListPricings>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
